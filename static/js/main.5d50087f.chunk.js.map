{"version":3,"sources":["components/Search/Search.tsx","components/FilterList/FilterList.tsx","components/PaginationButtons/PaginationButtons.tsx","components/HelperFuncs.ts","components/Table/Table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Search","setSearchTerm","React","useState","localSearchterm","setLocalSearchTerm","className","action","htmlFor","style","display","marginLeft","padding","fontSize","type","placeholder","value","onChange","e","newTerm","target","handleChange","onClick","preventDefault","FilterList","selectedHeader","values","setGenreFilter","setStateFilter","position","bottom","right","length","name","id","map","ele","datatype","PaginationButtons","setTablePaginationInd","tablePaginationInd","numOfRestaurants","previous","next","buttonStatus","setButtonStatus","useEffect","newPagInd","testSearchTerm","searchCriteria","term","genre","termLowerCase","split","toLowerCase","join","includes","emojiMapper","header","tableHeaders","Table","restaurantData","searchTerm","console","log","getListOfStates","useCallback","states","state","Array","from","Set","sort","a","b","getListOfGenres","listOfGenres","forEach","currentGenres","concat","genreFilter","stateFilter","filteredData","setFilteredData","paginatedData","setPaginatedData","setNumOfRestaurants","newData","slice","filteredValues","filterValues","restaurantDataCopy","filter","city","textAlign","justifyContent","typeOfFilter","restaurantObj","ind","App","axios","get","headers","Authorization","process","fetchedData","setRestaurantData","data","fetchRestaurantData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d50087f.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface IPropsSearch {\r\n  setSearchTerm: (value: string | null) => void;\r\n}\r\n\r\nexport default function Search({ setSearchTerm }: IPropsSearch) {\r\n  const handleChange = (e: any) => {\r\n    const newTerm = e.target.value;\r\n    if (newTerm === \"\") {\r\n      debugger;\r\n\r\n      setSearchTerm(\"\");\r\n    }\r\n    setLocalSearchTerm(newTerm);\r\n  };\r\n\r\n  const [localSearchterm, setLocalSearchTerm] = React.useState(\"\");\r\n\r\n  const handleSearch = (e: any) => {\r\n    e.preventDefault();\r\n    setSearchTerm(localSearchterm);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <form action=\"\">\r\n        <label htmlFor=\"\">\r\n          <h3 style={{ display: \"inline\" }}>Search Restaurant</h3>\r\n        </label>\r\n        <input\r\n          style={{ marginLeft: \"10px\", padding: \"8px\", fontSize: \"14px\" }}\r\n          type=\"text\"\r\n          placeholder=\"What you in the mood for?\"\r\n          value={localSearchterm}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n          }}\r\n        />\r\n        <button onClick={handleSearch} className=\"btn-search\">\r\n          Fooood!\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import \"./style.css\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface IFilterListProps {\r\n  typeOfFilter: string | null;\r\n  selectedHeader: string;\r\n  values: string[];\r\n  setStateFilter: (filter: any) => void;\r\n  setGenreFilter: (filter: any) => void;\r\n}\r\n\r\nexport default function FilterList({\r\n  selectedHeader,\r\n  values,\r\n  setGenreFilter,\r\n  setStateFilter,\r\n}: IFilterListProps) {\r\n  const handleChange = (e: any) => {\r\n    if (e.target.value === \"Choose state\") {\r\n      setStateFilter(e.target.value);\r\n    } else if (e.target.value.length === \"Choose genre\") {\r\n    } else if (e.target.value.length > 2) {\r\n      setGenreFilter(e.target.value);\r\n    } else {\r\n      setStateFilter(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n      }}\r\n    >\r\n      <select\r\n        onChange={(e) => {\r\n          handleChange(e);\r\n        }}\r\n        name=\"cars\"\r\n        id=\"cars\"\r\n      >\r\n        <option\r\n          value={selectedHeader === \"genre\" ? \"Choose genre\" : \"Choose state\"}\r\n        >\r\n          {selectedHeader === \"genre\" ? \"Choose genre\" : \"Choose state\"}\r\n        </option>\r\n        {values.map((ele) => {\r\n          return (\r\n            <option datatype={\"test\"} key={ele} value={ele}>\r\n              {ele}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import \"./style.css\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface IPropsPaginationButtons {\r\n  setTablePaginationInd: (value: number[]) => void;\r\n  tablePaginationInd: number[];\r\n  numOfRestaurants: number | null;\r\n}\r\n\r\nexport default function PaginationButtons({\r\n  setTablePaginationInd,\r\n  tablePaginationInd,\r\n  numOfRestaurants,\r\n}: IPropsPaginationButtons) {\r\n  const [buttonStatus, setButtonStatus] = React.useState({\r\n    previous: false,\r\n    next: true,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (numOfRestaurants) {\r\n      if (numOfRestaurants < 10) {\r\n        setButtonStatus({ previous: false, next: false });\r\n      } else if (tablePaginationInd[0] === 0) {\r\n        setButtonStatus({\r\n          previous: false,\r\n          next: true,\r\n        });\r\n      } else if (tablePaginationInd[1] >= numOfRestaurants) {\r\n        setButtonStatus({\r\n          previous: true,\r\n          next: false,\r\n        });\r\n      } else {\r\n        setButtonStatus({ previous: true, next: true });\r\n      }\r\n    }\r\n  }, [tablePaginationInd]);\r\n\r\n  const handleIncreasePagination = () => {\r\n    let newPagInd: any;\r\n    debugger;\r\n    if (numOfRestaurants) {\r\n      if (tablePaginationInd[1] >= numOfRestaurants) return;\r\n      newPagInd = [tablePaginationInd[0] + 10, tablePaginationInd[1] + 10];\r\n      setTablePaginationInd(newPagInd);\r\n    }\r\n  };\r\n\r\n  const handleDecreasePagination = () => {\r\n    let newPagInd: any;\r\n    if (numOfRestaurants) {\r\n      if (tablePaginationInd[0] <= 0) return;\r\n      newPagInd = [tablePaginationInd[0] - 10, tablePaginationInd[1] - 10];\r\n      setTablePaginationInd(newPagInd);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"btn-container\">\r\n      <div\r\n        className={buttonStatus.previous ? \"btn\" : \"btn-inactive\"}\r\n        onClick={handleDecreasePagination}\r\n      >\r\n        Previous\r\n      </div>\r\n      <div\r\n        className={buttonStatus.next ? \"btn\" : \"btn-inactive\"}\r\n        onClick={handleIncreasePagination}\r\n      >\r\n        Next\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function testSearchTerm(\r\n  searchCriteria: string,\r\n  term: string,\r\n  genre?: string\r\n) {\r\n  let termLowerCase = term\r\n    .split(\"\")\r\n    .map((ele) => {\r\n      return ele.toLowerCase();\r\n    })\r\n    .join(\"\");\r\n  let lowerCaseSearchCriteria;\r\n  if (genre) {\r\n    lowerCaseSearchCriteria = searchCriteria\r\n      .split(\",\")\r\n      .map((ele) => {\r\n        return ele.toLowerCase();\r\n      })\r\n      .join(\" \");\r\n  } else {\r\n    lowerCaseSearchCriteria = searchCriteria\r\n      .split(\",\")\r\n      .map((ele) => {\r\n        return ele.toLowerCase();\r\n      })\r\n      .join(\" \");\r\n  }\r\n\r\n  return lowerCaseSearchCriteria.includes(termLowerCase);\r\n}\r\n","import \"./style.css\";\r\n\r\nimport FilterList from \"../FilterList/FilterList\";\r\nimport { IRestaurant } from \"../../GeneralTypes\";\r\nimport PaginationButtons from \"../PaginationButtons/PaginationButtons\";\r\nimport React from \"react\";\r\nimport { testSearchTerm } from \"../HelperFuncs\";\r\n\r\ninterface IPropsTable {\r\n  restaurantData: IRestaurant[];\r\n  searchTerm: string | null;\r\n}\r\n\r\nconst emojiMapper = (header: string) => {\r\n  switch (header) {\r\n    case \"name\":\r\n      return <span>🍴</span>;\r\n    case \"city\":\r\n      return <span>🏙</span>;\r\n    case \"genre\":\r\n      return <span>🥘</span>;\r\n    case \"state\":\r\n      return <span>🗾</span>;\r\n    case \"telephone\":\r\n      return <span>📞</span>;\r\n  }\r\n};\r\n\r\nconst tableHeaders = [\"name\", \"city\", \"genre\", \"state\", \"telephone\"];\r\n\r\nexport default function Table({ restaurantData, searchTerm }: IPropsTable) {\r\n  console.log(\"-----------\", searchTerm);\r\n  const getListOfStates = React.useCallback(() => {\r\n    const states = restaurantData.map((ele) => {\r\n      return ele.state;\r\n    });\r\n    return Array.from(new Set(states)).sort((a, b) => {\r\n      return a > b ? 1 : -1;\r\n    });\r\n  }, [restaurantData]);\r\n\r\n  const getListOfGenres = React.useCallback(() => {\r\n    let listOfGenres: any[] = [];\r\n    restaurantData.forEach((ele: any) => {\r\n      let currentGenres = ele.genre.split(\",\");\r\n      listOfGenres = listOfGenres.concat(currentGenres);\r\n    });\r\n    return Array.from(new Set(listOfGenres)).sort((a, b) => {\r\n      return a > b ? 1 : -1;\r\n    });\r\n  }, [restaurantData]);\r\n\r\n  const [genreFilter, setGenreFilter] = React.useState(null);\r\n  const [stateFilter, setStateFilter] = React.useState(null);\r\n  const [filteredData, setFilteredData] = React.useState(restaurantData);\r\n  const [paginatedData, setPaginatedData] = React.useState([]);\r\n  const [tablePaginationInd, setTablePaginationInd] = React.useState([0, 10]);\r\n  const [numOfRestaurants, setNumOfRestaurants] = React.useState(\r\n    restaurantData.length\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let newData: any = filteredData.slice(\r\n      tablePaginationInd[0],\r\n      tablePaginationInd[1]\r\n    );\r\n    setPaginatedData(newData);\r\n  }, [tablePaginationInd]);\r\n\r\n  React.useEffect(() => {\r\n    if (!genreFilter && !stateFilter && searchTerm === null) return;\r\n    const filteredValues: any = filterValues(genreFilter, stateFilter);\r\n    setFilteredData(filteredValues);\r\n    setNumOfRestaurants(filteredValues.length);\r\n    setTablePaginationInd([0, 10]);\r\n  }, [genreFilter, stateFilter, searchTerm]);\r\n\r\n  const filterValues = (genreFilter: any, stateFilter: any) => {\r\n    let restaurantDataCopy = restaurantData.slice();\r\n\r\n    if (genreFilter) {\r\n      restaurantDataCopy = restaurantDataCopy.filter((ele) => {\r\n        if (genreFilter === \"Choose genre\") {\r\n          return ele;\r\n        } else {\r\n          return ele.genre.split(\",\").includes(genreFilter);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (stateFilter) {\r\n      restaurantDataCopy = restaurantDataCopy.filter((ele: any) => {\r\n        if (stateFilter === \"Choose state\") {\r\n          return ele;\r\n        } else {\r\n          return ele.state === stateFilter;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (searchTerm) {\r\n      debugger;\r\n      restaurantDataCopy = restaurantDataCopy.filter((ele: any): void => {\r\n        if (\r\n          testSearchTerm(ele.name, searchTerm) ||\r\n          testSearchTerm(ele.city, searchTerm) ||\r\n          testSearchTerm(ele.genre, searchTerm, \"genre\")\r\n        ) {\r\n          return ele;\r\n        } else {\r\n          if (searchTerm === \"\") {\r\n            return ele;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return restaurantDataCopy;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <table className=\"restaurant-table\">\r\n        <tbody>\r\n          <tr>\r\n            {tableHeaders.map((ele: any) => {\r\n              return (\r\n                <th key={ele}>\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <div style={{ padding: \"32px\" }}>\r\n                      <span>{emojiMapper(ele)}</span>\r\n                      <span style={{ marginLeft: \"10px\" }}>{ele}</span>\r\n                    </div>\r\n                    {ele === \"state\" || ele === \"genre\" ? (\r\n                      <FilterList\r\n                        typeOfFilter={\r\n                          ele === \"state\" ? stateFilter : genreFilter\r\n                        }\r\n                        setGenreFilter={setGenreFilter}\r\n                        setStateFilter={setStateFilter}\r\n                        values={\r\n                          ele === \"state\"\r\n                            ? getListOfStates()\r\n                            : getListOfGenres()\r\n                        }\r\n                        selectedHeader={ele}\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n\r\n          {paginatedData.map((restaurantObj: any, ind: any) => {\r\n            return (\r\n              <tr key={ind}>\r\n                {tableHeaders.map((ele, ind) => {\r\n                  return <td key={ind}>{restaurantObj[ele]}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {!filteredData.length ? (\r\n        <h2>We couldn't find anything at this time =(</h2>\r\n      ) : null}\r\n\r\n      <PaginationButtons\r\n        numOfRestaurants={numOfRestaurants}\r\n        tablePaginationInd={tablePaginationInd}\r\n        setTablePaginationInd={setTablePaginationInd}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\n\nimport { IRestaurant } from \"./GeneralTypes\";\nimport React from \"react\";\nimport Seach from \"./components/Search/Search\";\nimport Table from \"./components/Table/Table\";\nimport axios from \"axios\";\n\nfunction App() {\n  React.useEffect(() => {\n    let fetchRestaurantData = async () => {\n      let fetchedData = await axios.get(\n        \"https://code-challenge.spectrumtoolbox.com/api/restaurants\",\n        {\n          headers: {\n            Authorization: process.env.REACT_APP_APIKEY,\n          },\n        }\n      );\n      setRestaurantData(\n        fetchedData.data.sort((a: IRestaurant, b: IRestaurant) => {\n          return a.name > b.name ? 1 : -1;\n        })\n      );\n    };\n\n    fetchRestaurantData();\n  }, []);\n\n  const [restaurantData, setRestaurantData] = React.useState<any>([]);\n  const [searchTerm, setSearchTerm] = React.useState<string | null>(null);\n\n  return (\n    <div className=\"App\">\n      {!restaurantData.length ? (\n        <h2>Loading...</h2>\n      ) : (\n        <>\n          <h1>List of Restaurants</h1>\n          <Seach setSearchTerm={setSearchTerm} />\n          <Table searchTerm={searchTerm} restaurantData={restaurantData} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}